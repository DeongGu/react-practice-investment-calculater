{
  "compilerOptions": {
    /* 프로젝트 관련 설정 */
    "incremental": true, // 증분 컴파일을 활성화하여 .tsbuildinfo 파일을 생성합니다. 컴파일 속도를 개선합니다.
    "composite": false, // 프로젝트 참조를 활성화하는 설정입니다. 단일 프로젝트라면 비활성화해도 무방합니다.
    "disableSourceOfProjectReferenceRedirect": true, // 프로젝트 참조 시 선언 파일 대신 소스 파일을 사용하는 것을 비활성화합니다.
    "disableSolutionSearching": true, // 여러 프로젝트를 참조할 때 자동 검색 기능을 비활성화합니다.
    "disableReferencedProjectLoad": true, // 참조된 프로젝트를 자동으로 로드하는 것을 최소화합니다.

    /* 언어 및 환경 설정 */
    "target": "es2016", // 컴파일된 JavaScript의 언어 버전을 설정합니다. (es2016 이상에서 동작하도록 설정)
    "module": "commonjs", // 모듈 시스템을 CommonJS로 설정합니다. Node.js 환경에 적합합니다.
    "esModuleInterop": true, // CommonJS 모듈을 ES 모듈처럼 가져올 수 있도록 추가적인 JavaScript 코드를 생성합니다.
    "forceConsistentCasingInFileNames": true, // import 시 대소문자 구분을 강제하여 파일명 불일치 오류를 방지합니다.
    "jsx": "react-jsx", // React 17 이상에서 JSX를 사용하도록 설정합니다. (React 16에서는 "react"로 설정해야 함)

    /* 타입 검사 관련 설정 */
    "strict": true, // 모든 엄격한 타입 검사 옵션을 활성화하여 타입 안정성을 강화합니다.
    "skipLibCheck": true, // .d.ts 파일에 대한 타입 검사를 건너뛰어 빌드 속도를 개선합니다. (라이브러리 타입에 문제가 없다면 유지)

    /* 출력 및 경로 설정 */
    "outDir": "./dist", // 컴파일된 JavaScript 파일을 출력할 디렉토리를 지정합니다.
    "rootDir": "./src", // 소스 파일이 위치한 디렉토리를 지정합니다. (기본적으로 src 디렉토리로 설정)

    /* 경로 별칭 설정 */
    "baseUrl": "./", // 경로의 기본 디렉토리를 설정합니다. (기본값은 현재 디렉토리)
    "paths": {
      "@components/*": ["src/components/*"], // @components 경로 별칭을 src/components로 지정합니다.
      "@utils/*": ["src/utils/*"] // @utils 경로 별칭을 src/utils로 지정합니다.
    }
  },

  /* 컴파일할 파일 및 제외할 파일 설정 */
  "include": ["src/**/*"], // 컴파일할 파일을 src 폴더 내의 모든 파일로 설정합니다.
  "exclude": ["node_modules", "dist"] // node_modules와 dist 폴더는 컴파일에서 제외합니다.
}
